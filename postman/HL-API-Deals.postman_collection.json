{
  "info": {
    "name": "HL API \u2013 Deals CRUD",
    "_postman_id": "a5a3f1e2-9c77-4a64-9f1e-1757696469-6469",
    "description": "CRUD + Auth for HL API (.NET) with JWT. Set {{baseUrl}} and run Auth/Login first.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Login (stores {{jwt}})",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"ChangeMe123!\"\n}"
            },
            "description": "Adjust credentials to your AuthController expectations."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status is 200/201', function () {",
                  "  pm.expect(pm.response.code).to.be.oneOf([200,201]);",
                  "});",
                  "let data = {};",
                  "try { data = pm.response.json(); } catch(e) {}",
                  "let token = data.token || data.access_token || data.jwt;",
                  "if (token) {",
                  "  pm.environment.set('jwt', token);",
                  "  console.log('JWT saved to env var {{jwt}}');",
                  "} else {",
                  "  console.warn('Token not found in response body');",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Deals",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// helper timestamp for unique names",
              "pm.variables.set('timestamp', Date.now());"
            ]
          }
        }
      ],
      "item": [
        {
          "name": "Get All Deals",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/deals",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "deals"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
                  "let arr = [];",
                  "try { arr = pm.response.json(); } catch(e) {}",
                  "if (Array.isArray(arr) && arr.length > 0 && arr[0].id) {",
                  "  pm.environment.set('dealId', arr[0].id);",
                  "  console.log('Seeded dealId from list:', arr[0].id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Deal (stores {{dealId}})",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/deals",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "deals"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Deal {{timestamp}}\",\n  \"client\": \"Acme Corp\",\n  \"amount\": 12345.67\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 201/200', function () {",
                  "  pm.expect(pm.response.code).to.be.oneOf([200,201]);",
                  "});",
                  "let obj = {};",
                  "try { obj = pm.response.json(); } catch(e) {}",
                  "if (obj && obj.id) {",
                  "  pm.environment.set('dealId', obj.id);",
                  "  console.log('Saved dealId:', obj.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Deal by Id",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/deals/{{dealId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "deals",
                "{{dealId}}"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200', function () { pm.response.to.have.status(200); });"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Deal",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/deals/{{dealId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "deals",
                "{{dealId}}"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Deal {{timestamp}}\",\n  \"client\": \"Acme Corp\",\n  \"amount\": 23456.78\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200', function () { pm.response.to.have.status(200); });"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete Deal",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/deals/{{dealId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "deals",
                "{{dealId}}"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 204/200', function () {",
                  "  pm.expect(pm.response.code).to.be.oneOf([200,204]);",
                  "});",
                  "pm.environment.unset('dealId');"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://REPLACE_ME",
      "type": "string"
    },
    {
      "key": "jwt",
      "value": "",
      "type": "secret"
    }
  ]
}